[{"C:\\dogworld\\src\\index.js":"1","C:\\dogworld\\src\\reportWebVitals.js":"2","C:\\dogworld\\src\\Timer\\useTimer.js":"3","C:\\dogworld\\src\\Timer\\Timer.js":"4","C:\\dogworld\\src\\Timer\\List.js":"5","C:\\dogworld\\src\\Home.js":"6","C:\\dogworld\\src\\App.js":"7","C:\\dogworld\\src\\NotFound.js":"8","C:\\dogworld\\src\\Dogs\\Dog.js":"9","C:\\dogworld\\src\\Country\\Countries.js":"10"},{"size":530,"mtime":1612075847487,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1606763441473,"results":"13","hashOfConfig":"12"},{"size":974,"mtime":1612082658870,"results":"14","hashOfConfig":"12"},{"size":816,"mtime":1612084272653,"results":"15","hashOfConfig":"12"},{"size":2846,"mtime":1612084954283,"results":"16","hashOfConfig":"12"},{"size":1286,"mtime":1612084894068,"results":"17","hashOfConfig":"12"},{"size":896,"mtime":1612076952640,"results":"18","hashOfConfig":"12"},{"size":1587,"mtime":1612076662113,"results":"19","hashOfConfig":"12"},{"size":4521,"mtime":1612581844721,"results":"20","hashOfConfig":"12"},{"size":5930,"mtime":1612084768541,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1vd80wo",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dogworld\\src\\index.js",[],["46","47"],"C:\\dogworld\\src\\reportWebVitals.js",[],"C:\\dogworld\\src\\Timer\\useTimer.js",[],"C:\\dogworld\\src\\Timer\\Timer.js",["48"],"import React from \"react\";\r\n\r\nimport useTimer from \"./useTimer\";\r\n\r\nconst Timer = () => {\r\n  const {\r\n    timer,\r\n    isActive,\r\n    isPaused,\r\n    handleStart,\r\n    handlePause,\r\n    handleResume,\r\n    handleReset,\r\n  } = useTimer(0);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"stopwatch-card\">\r\n        <h1 className> {timer}</h1>\r\n      </div>\r\n      \r\n      <div className=\"buttons \">\r\n          {!isActive && !isPaused ? (\r\n            <button className=\"home-route\" onClick={handleStart}>Start</button>\r\n          ) : isPaused ? (\r\n            <button className=\"home-route\" onClick={handlePause}>Pause</button>\r\n          ) : (\r\n            <button className=\"home-route\" onClick={handleResume}>Start</button>\r\n          )}\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n",["49","50"],"C:\\dogworld\\src\\Timer\\List.js",["51"],"import React, { Component } from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class List extends Component {\r\n  state = {\r\n    Task: [],\r\n    inputValue: \"\",\r\n    id: 1,\r\n  };\r\n\r\n  handleKeyPress = (event) => {\r\n    const { inputValue, Task } = this.state;\r\n\r\n    if (event.key === \"Enter\") {\r\n      let ide = this.state.id++;\r\n      this.setState({\r\n        Task: [...Task, { id: ide, name: inputValue }],\r\n        inputValue: \"\",\r\n      });\r\n    }\r\n  };\r\n  handleChange = (evt) => {\r\n    this.setState({\r\n      inputValue: evt.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { Task, inputValue } = this.state;\r\n    return (\r\n      <>\r\n        <h1 className=\"py-4 text-center\">\r\n          <Link className=\"\" to=\"/\">\r\n            <svg\r\n              aria-hidden=\"true\"\r\n              focusable=\"false\"\r\n              data-prefix=\"far\"\r\n              data-icon=\"arrow-left\"\r\n              class=\"svg-inline--fa fa-arrow-left fa-w-14 w-11\"\r\n              role=\"img\"\r\n              viewBox=\"0 0 448 512\"\r\n              className=\"backbutton\"\r\n            >\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M229.9 473.899l19.799-19.799c4.686-4.686 4.686-12.284 0-16.971L94.569 282H436c6.627 0 12-5.373 12-12v-28c0-6.627-5.373-12-12-12H94.569l155.13-155.13c4.686-4.686 4.686-12.284 0-16.971L229.9 38.101c-4.686-4.686-12.284-4.686-16.971 0L3.515 247.515c-4.686 4.686-4.686 12.284 0 16.971L212.929 473.9c4.686 4.686 12.284 4.686 16.971-.001z\"\r\n              ></path>\r\n            </svg>\r\n          </Link>\r\n          Task List ⏱️\r\n        </h1>\r\n        <section class=\"glass\">\r\n          <div class=\"games m-4\">\r\n            <div class=\"cards\">\r\n              {Task &&\r\n                Task.length > 0 &&\r\n                Task.map((data) => (\r\n                  <>\r\n                    <div class=\"card-game\">\r\n                      <div class=\"card-info\">\r\n                        <div className=\"row px-3\">\r\n                          <p className=\"mb-0\">\r\n                            <span className=\"text-dark\">{data.id}</span>\r\n                            {\". \"}\r\n                            {data.name}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <Timer />\r\n                    </div>\r\n                  </>\r\n                ))}{\" \"}\r\n              <p className=\"text-center mb-0\">Add a task</p>{\" \"}\r\n              <input\r\n                className=\"search-input form-control\"\r\n                placeholder=\"Enter Task Name +\"\r\n                value={inputValue}\r\n                onChange={this.handleChange}\r\n                onKeyPress={this.handleKeyPress}\r\n              />\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","C:\\dogworld\\src\\Home.js",[],"C:\\dogworld\\src\\App.js",[],"C:\\dogworld\\src\\NotFound.js",[],"C:\\dogworld\\src\\Dogs\\Dog.js",["52"],"C:\\dogworld\\src\\Country\\Countries.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":13,"column":5,"nodeType":"59","messageId":"60","endLine":13,"endColumn":16},{"ruleId":"53","replacedBy":"61"},{"ruleId":"55","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":16,"column":17,"nodeType":"65","endLine":16,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":128,"column":17,"nodeType":"68","endLine":128,"endColumn":68},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'handleReset' is assigned a value but never used.","Identifier","unusedVar",["69"],["70"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]